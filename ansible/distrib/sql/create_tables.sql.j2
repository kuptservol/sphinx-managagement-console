SET NAMES utf8;

#
# Create database
#

USE {{db_name}};

DROP TABLE IF EXISTS `ACTIVITY_LOG`;
DROP TABLE IF EXISTS `ADMIN_PROCESS`;
DROP TABLE IF EXISTS `BACKUP`;
DROP TABLE IF EXISTS `CONFIGURATION_FIELDS`;
DROP TABLE IF EXISTS `DELTA`;
DROP TABLE IF EXISTS `EXTERNAL_ACTION`;
DROP TABLE IF EXISTS `FIELD_MAPPING`;
DROP TABLE IF EXISTS `PARTITION_TABLE`;
DROP TABLE IF EXISTS `SCHEDULED_TASK`;
DROP TABLE IF EXISTS `SPHINX_PROCESS`;
DROP TABLE IF EXISTS `SERVER`;
DROP TABLE IF EXISTS `REPLICA`;
DROP TABLE IF EXISTS `CONFIGURATION`;
DROP TABLE IF EXISTS `CONFIGURATION_TEMPLATE`;
DROP TABLE IF EXISTS `COLLECTION`;
DROP TABLE IF EXISTS `DATASOURCE`;
DROP TABLE IF EXISTS `DELETE_SCHEME`;

#
# Structure for table "DATASOURCE"
#

CREATE TABLE `DATASOURCE` (
  `datasource_id` bigint(20) NOT NULL,
  `type` varchar(10) DEFAULT NULL,
  `sql_host` varchar(15) DEFAULT NULL,
  `sql_port` bigint(20) DEFAULT NULL,
  `sql_user` varchar(50) DEFAULT NULL,
  `sql_pass` varchar(50) DEFAULT NULL,
  `odbc_dsn` varchar(100) DEFAULT NULL,
  `sql_db` varchar(100) DEFAULT NULL,
  `name` varchar(255) NOT NULL,
  PRIMARY KEY (`datasource_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Structure for table "COLLECTION"
#

CREATE TABLE `COLLECTION` (
  `collection_id` bigint(20) NOT NULL,
  `collection_name` varchar(200) NOT NULL,
  `description` varchar(100) DEFAULT NULL,
  `index_label` varchar(25) DEFAULT NULL,
  `type` varchar(50) not null default 'SIMPLE',
  `last_indexing_time` timestamp NULL DEFAULT NULL,
  `next_indexing_time` timestamp NULL DEFAULT NULL,
  `last_merge_time` timestamp NULL DEFAULT NULL,
  `next_merge_time` timestamp NULL DEFAULT NULL,
  `is_processing_failed` bool NOT NULL DEFAULT 1,
  `collection_type` varchar(50) not null default 'SIMPLE',
  `need_reload` tinyint(1) null,
  PRIMARY KEY (`collection_id`),
  UNIQUE KEY `UQ_COLLECTION_collection_name` (`collection_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Structure for table "CONFIGURATION_TEMPLATE"
#

CREATE TABLE `CONFIGURATION_TEMPLATE` (
  `configuration_template_id` bigint(20) NOT NULL,
  `name` varchar(50) NOT NULL,
  `description` varchar(200) DEFAULT NULL,
  `is_default` tinyint(1) DEFAULT NULL,
  `is_system` tinyint(1) DEFAULT NULL,
  `type` varchar(20) DEFAULT NULL,
  `collection_type` varchar(50) NOT NULL DEFAULT 'SIMPLE',
  PRIMARY KEY (`configuration_template_id`),
  UNIQUE KEY `unique_name_configuration_type` (`name`,`type`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Structure for table "CONFIGURATION"
#

CREATE TABLE `CONFIGURATION` (
  `configuration_id` bigint(20) NOT NULL,
  `name` varchar(100) NOT NULL DEFAULT '',
  `searchd_configuration_template_id` bigint(20) DEFAULT NULL,
  `datasource_id` bigint(20) DEFAULT NULL,
  `configuration_template_id` bigint(20) DEFAULT NULL,
  `indexer_configuration_template_id` bigint(20) DEFAULT NULL,
  `file_path` varchar(200) DEFAULT NULL,
  `port` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`configuration_id`),
  UNIQUE KEY `configuration_name_constraint` (`name`) USING BTREE,
  KEY `configuration_template_id` (`configuration_template_id`),
  KEY `datasource_id` (`datasource_id`),
  KEY `searchd_configuration_template_id` (`searchd_configuration_template_id`),
  KEY `indexer_configuration_template_id` (`indexer_configuration_template_id`),
  CONSTRAINT `FK_CONFIGURATION_CONFIGURATION_TEMPLATE` FOREIGN KEY (`configuration_template_id`) REFERENCES `CONFIGURATION_TEMPLATE` (`configuration_template_id`),
  CONSTRAINT `FK_CONFIGURATION_DATASOURCE` FOREIGN KEY (`datasource_id`) REFERENCES `DATASOURCE` (`datasource_id`),
  CONSTRAINT `FK_CONFIGURATION_INDEXER_CONFIGURATION_TEMPLATE` FOREIGN KEY (`indexer_configuration_template_id`) REFERENCES `CONFIGURATION_TEMPLATE` (`configuration_template_id`),
  CONSTRAINT `FK_CONFIGURATION_SEARCHD_CONFIGURATION_TEMPLATE` FOREIGN KEY (`searchd_configuration_template_id`) REFERENCES `CONFIGURATION_TEMPLATE` (`configuration_template_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Structure for table "CONFIGURATION_FIELDS"
#

CREATE TABLE `CONFIGURATION_FIELDS` (
  `configuration_fields_id` bigint(20) NOT NULL,
  `field_key` varchar(255) DEFAULT NULL,
  `field_value` text,
  `configuration_template_id` bigint(20) DEFAULT NULL,
  `configuration_type` varchar(10) DEFAULT NULL,
  `configuration_id` bigint(20) NULL,
  `field_commentary` varchar(100) DEFAULT NULL,
  `index_type` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`configuration_fields_id`),
  KEY `configuration_template_id` (`configuration_template_id`),
  CONSTRAINT `FK_CONFIGURATION_FIELDS_CONFIGURATION_TEMPLATE` FOREIGN KEY (`configuration_template_id`) REFERENCES `CONFIGURATION_TEMPLATE` (`configuration_template_id`),
  CONSTRAINT `FK_CONFIGURATION_FIELDS_CONFIGURATION` FOREIGN KEY (`configuration_id`) REFERENCES `CONFIGURATION` (`configuration_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `DELETE_SCHEME` (
  `delete_scheme_id` bigint(20) NOT NULL,
  `type` char(20) NOT NULL DEFAULT '',
  `field_name` varchar(50) NOT NULL,
  `field_value` text NOT NULL,
  PRIMARY KEY (`delete_scheme_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Structure for table "DELTA"
#

CREATE TABLE `DELTA` (
  `delta_id` bigint(20) NOT NULL,
  `collection_id` bigint(20) NOT NULL,
  `delta_type` char(25) NOT NULL,
  `delta_period` datetime NOT NULL,
  `external_action_id` bigint(20) DEFAULT NULL,
  `delta_field` char(10) DEFAULT NULL,
  `delta_merge_time` datetime NOT NULL,
  `delete_scheme_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`delta_id`),
  KEY `collection_id` (`collection_id`),
  CONSTRAINT `FK_DELTA_COLLECTION` FOREIGN KEY (`collection_id`) REFERENCES `COLLECTION` (`collection_id`),
  CONSTRAINT `FK_DELTA_DELETE_SCHEME` FOREIGN KEY (`delete_scheme_id`) REFERENCES `DELETE_SCHEME` (`delete_scheme_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Structure for table "FIELD_MAPPING"
#

CREATE TABLE `FIELD_MAPPING` (
  `field_mapping_id` bigint(20) NOT NULL,
  `source_field` varchar(100) DEFAULT NULL,
  `index_field` varchar(100) DEFAULT NULL,
  `index_field_type` varchar(100) DEFAULT NULL,
  `index_field_commentary` varchar(100) DEFAULT NULL,
  `is_id` tinyint(1) DEFAULT NULL,
  `configuration_id` bigint(20) DEFAULT NULL,
  `source_field_type` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`field_mapping_id`),
  KEY `configuration_id` (`configuration_id`),
  CONSTRAINT `FK_FIELD_MAPPING_CONFIGURATION` FOREIGN KEY (`configuration_id`) REFERENCES `CONFIGURATION` (`configuration_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Structure for table "PARTITION_TABLE"
#

CREATE TABLE `PARTITION_TABLE` (
  `partition_id` bigint(20) NOT NULL,
  `collection_id` bigint(20) NOT NULL,
  `index_name` char(25) NOT NULL,
  `partition_number` bigint(20) NOT NULL,
  `partition_key` char(100) NOT NULL,
  PRIMARY KEY (`partition_id`),
  KEY `collection_id` (`collection_id`),
  CONSTRAINT `FK_PARTITION_COLLECTION` FOREIGN KEY (`collection_id`) REFERENCES `COLLECTION` (`collection_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Structure for table "REPLICA"
#

CREATE TABLE `REPLICA` (
  `replica_id` bigint(20) NOT NULL,
  `collection_id` bigint(20) DEFAULT NULL,
  `replica_number`  bigint(20) NOT NULL,
  PRIMARY KEY (`replica_id`),
  KEY `collection_id` (`collection_id`),
  CONSTRAINT `FK_Replica_COLLECTION` FOREIGN KEY (`collection_id`) REFERENCES `COLLECTION` (`collection_id`),
  UNIQUE KEY `UQ_COLLECTION_REPLICA_replica_number` (`collection_id`,`replica_number`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Structure for table "SCHEDULED_TASK"
#

CREATE TABLE `SCHEDULED_TASK` (
  `scheduled_task_id` bigint(20) NOT NULL,
  `collection_id` bigint(20) DEFAULT NULL,
  `task_name` varchar(50) NOT NULL,
  `is_enabled` bool NOT NULL DEFAULT 1,
  `cron_schedule` varchar(50) NOT NULL DEFAULT '',
  PRIMARY KEY (`scheduled_task_id`),
  KEY `collection_id` (`collection_id`),
  CONSTRAINT `FK_SCHEDULED_TASK_COLLECTION` FOREIGN KEY (`collection_id`) REFERENCES `COLLECTION` (`collection_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Structure for table "SERVER"
#

CREATE TABLE `SERVER` (
  `server_id` bigint(20) NOT NULL,
  `ip` varchar(20) NOT NULL,
  `domain_name` varchar(25) DEFAULT NULL,
  `name` varchar(25) NOT NULL DEFAULT '',
  PRIMARY KEY (`server_id`),
  UNIQUE KEY `UQ_SERVER_ip` (`ip`),
  UNIQUE KEY `UQ_SERVER_name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Structure for table "EXTERNAL_ACTION"
#

CREATE TABLE `EXTERNAL_ACTION` (
  `external_action_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `external_action_type` varchar(10) NOT NULL DEFAULT '',
  `datasource_id` bigint(20) DEFAULT NULL,
  `server_id` bigint(20) DEFAULT NULL,
  `external_action_code` blob NOT NULL,
  PRIMARY KEY (`external_action_id`),
  UNIQUE KEY `external_action_id` (`external_action_id`),
  CONSTRAINT `FK_DELTA_DATASOURCE` FOREIGN KEY (`datasource_id`) REFERENCES `DATASOURCE` (`datasource_id`),
  CONSTRAINT `FK_DELTA_SERVER` FOREIGN KEY (`server_id`) REFERENCES `SERVER` (`server_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Structure for table "BACKUP"
#

CREATE TABLE `BACKUP` (
  `backup_id` bigint(20) NOT NULL,
  `collection_id` bigint(20) NOT NULL,
  `index_name` char(10) NOT NULL,
  `server_id` bigint(20) NOT NULL,
  `schedule` char(50) NOT NULL,
  `max_number` bigint(20) DEFAULT NULL,
  `backup_path` char(10) NOT NULL,
  `tmstmp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`backup_id`),
  KEY `collection_id` (`collection_id`),
  KEY `server_id` (`server_id`),
  CONSTRAINT `FK_BACKUP_COLLECTION` FOREIGN KEY (`collection_id`) REFERENCES `COLLECTION` (`collection_id`),
  CONSTRAINT `FK_BACKUP_SERVER` FOREIGN KEY (`server_id`) REFERENCES `SERVER` (`server_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Structure for table "ADMIN_PROCESS"
#

CREATE TABLE `ADMIN_PROCESS` (
  `admin_process_id` bigint(20) NOT NULL,
  `type` varchar(20) NOT NULL DEFAULT '',
  `port` int(11) NOT NULL DEFAULT '0',
  `server_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`admin_process_id`),
  KEY `server_id` (`server_id`),
  CONSTRAINT `FK_ADMIN_PROCESS_SERVER` FOREIGN KEY (`server_id`) REFERENCES `SERVER` (`server_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Structure for table "SPHINX_PROCESS"
#

CREATE TABLE `SPHINX_PROCESS` (
  `sphinx_process_id` bigint(20) NOT NULL,
  `server_id` bigint(20) NOT NULL,
  `collection_id` bigint(20) NOT NULL,
  `index_name` varchar(100) DEFAULT NULL,
  `configuration_id` bigint(20) DEFAULT NULL,
  `type` varchar(20) NOT NULL,
  `generated_sphinx_conf` longblob,
  `replica_id` bigint(20) NOT NULL,
  `port` smallint(6) NOT NULL DEFAULT '0',
  PRIMARY KEY (`sphinx_process_id`),
  KEY `collection_id` (`collection_id`),
  KEY `configuration_id` (`configuration_id`),
  KEY `server_id` (`server_id`),
  CONSTRAINT `FK_PROCESS_COLLECTION` FOREIGN KEY (`collection_id`) REFERENCES `COLLECTION` (`collection_id`),
  CONSTRAINT `FK_PROCESS_CONFIGURATION_TEMPLATE` FOREIGN KEY (`configuration_id`) REFERENCES `CONFIGURATION` (`configuration_id`),
  CONSTRAINT `FK_SPHINX_PROCESS_REPLICA` FOREIGN KEY (`replica_id`) REFERENCES `REPLICA` (`replica_id`),
  CONSTRAINT `FK_PROCESS_SERVER` FOREIGN KEY (`server_id`) REFERENCES `SERVER` (`server_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Structure for table "ACTIVITY_LOG"
#

CREATE TABLE `ACTIVITY_LOG` (
  `activity_log_id` bigint(20) NOT NULL,
  `task_name` varchar(100) NOT NULL DEFAULT '',
  `date_time` datetime NOT NULL,
  `collection_id` bigint(20) DEFAULT NULL,
  `index_name` varchar(200) DEFAULT '',
  `server_id` bigint(20) DEFAULT '0',
  `server_name` varchar(25) DEFAULT NULL,
  `process_id` bigint(20) DEFAULT '0',
  `process_type` varchar(20) DEFAULT NULL,
  `start_time` timestamp NULL DEFAULT '0000-00-00 00:00:00.00' ON UPDATE CURRENT_timestamp,
  `end_time` timestamp NULL DEFAULT '0000-00-00 00:00:00.00',
  `operation_type` varchar(100) NOT NULL DEFAULT '',
  `stage_status` varchar(50) NOT NULL DEFAULT '',
  `exception_text` text,
  `data` blob,
  `task_uid` varchar(36) NOT NULL DEFAULT '',
  `task_status` varchar(100) DEFAULT NULL,
  `task_start_time` timestamp NULL DEFAULT NULL,
  `task_end_time` timestamp NULL DEFAULT NULL,
  `replica_number` int(3) NOT NULL DEFAULT '1',
  PRIMARY KEY (`activity_log_id`),
  KEY `collection_id` (`collection_id`),
  KEY `server_id` (`server_id`),
  CONSTRAINT `FK_ACTIVITY_LOG_COLLECTION` FOREIGN KEY (`collection_id`) REFERENCES `COLLECTION` (`collection_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE ACTIVITY_LOG ADD INDEX (TASK_UID);

ALTER TABLE ACTIVITY_LOG ADD INDEX (INDEX_NAME);

CREATE TABLE IF NOT EXISTS `SNIPPET_CONFIGURATION` (
  `snippet_configuration_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `collection_id` bigint(20) DEFAULT NULL,
  `scheduled_task_id` bigint(20) DEFAULT NULL,
  `datasource_id` bigint(20) DEFAULT NULL,
  `last_buildsnippet` timestamp NULL DEFAULT NULL,
  `next_buildsnippet` timestamp NULL DEFAULT NULL,
  `pre_query` text,
  `post_query` text,
  `main_query` text,
  `full_pre_query` text,
  `full_post_query` text,
  `full_main_query` text,
  PRIMARY KEY (`snippet_configuration_id`),
  KEY `collection_id` (`collection_id`),
  KEY `datasource_id` (`datasource_id`),
  KEY `scheduled_task_id` (`scheduled_task_id`),
  CONSTRAINT `FK_SNIPPET_CONFIGURATION_COLLECTION` FOREIGN KEY (`collection_id`) REFERENCES `COLLECTION` (`collection_id`),
  CONSTRAINT `FK_SNIPPET_CONFIGURATION_SCHEDULE` FOREIGN KEY (`scheduled_task_id`) REFERENCES `SCHEDULED_TASK` (`scheduled_task_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `SNIPPET_CONFIGURATION_FIELD` (
  `snippet_configuration_field_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `snippet_configuration_id` bigint(20) DEFAULT NULL,
  `field_name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`snippet_configuration_field_id`),
  KEY `snippet_configuration_id` (`snippet_configuration_id`),
  CONSTRAINT `FK_SNIPPET_CONFIGURATION_FIELD_CONFIGURATION` FOREIGN KEY (`snippet_configuration_id`) REFERENCES `SNIPPET_CONFIGURATION` (`snippet_configuration_id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `DISTRIBUTED_COLLECTION_NODE` (
  `distributed_collection_node_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `distributed_collection_id` bigint(20) NOT NULL,
  `simple_collection_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`distributed_collection_node_id`),
  KEY `distributed_collection_id` (`distributed_collection_id`),
  KEY `simple_collection_id` (`simple_collection_id`),
  CONSTRAINT `FK_DISTIBUTED_COLLECTION_NODE_DISTRINUTED` FOREIGN KEY (`distributed_collection_id`) REFERENCES `COLLECTION` (`collection_id`),
  CONSTRAINT `FK_DISTIBUTED_COLLECTION_NODE_SIMPLE` FOREIGN KEY (`simple_collection_id`) REFERENCES `COLLECTION` (`collection_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `DISTRIBUTED_COLLECTION_AGENT` (
  `distributed_collection_agent_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `distributed_collection_node_id` bigint(20) DEFAULT NULL,
  `node_host` varchar(100) DEFAULT NULL,
  `node_distrib_port` varchar(6) DEFAULT NULL,
  `sphinx_process_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`distributed_collection_agent_id`),
  CONSTRAINT `FK_DISTRIBUTED_COLLECTION_AGENT_SP` FOREIGN KEY (`sphinx_process_id`) REFERENCES `SPHINX_PROCESS` (`sphinx_process_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `COMMAND` (
  `id` bigint(20) NOT NULL,
  `command_id` varchar(2000) NOT NULL,
  `method_name` varchar(2000) NOT NULL,
  `json_file_path` varchar(2000) DEFAULT NULL,
  `execute_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#DELIMITER $$
#CREATE TRIGGER verify_single_coordinator
#BEFORE INSERT ON ADMIN_PROCESS
#FOR EACH ROW
#BEGIN
#  IF NEW.type = 'COORDINATOR' AND EXISTS (SELECT 1 FROM ADMIN_PROCESS WHERE type='COORDINATOR')
#  THEN
#    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Duplicate coordinator';
#  END IF;
#END;
#$$